openapi: 3.0.0
info:
  title: easy-way-api
  description: An OpenAPI v3 API for finding the easiest way through the supermarket.
  version: 1.0.0
  contact:
    name: Jan-Benedikt Jagusch
    email: jan.jagusch@gmail.comd
servers:
  - url: http://localhost:8080/api/{version}
    description: Development Server
    variables:
      version:
        default: v1
        enum:
          - v1
paths:
  /health_check:
    get:
      summary: Checks whether the API is healthy.
      tags:
        - health
      operationId: app.health_check
      responses:
        204:
          description: "The API is healthy"
        500:
          description: "The API is not healthy"
  /supermarkets:
    get:
      summary: "Lists all supermarkets"
      description: "Returns an array of supermarkets"
      operationId: "app.get_supermarkets"
      responses:
        200:
          description: "Successful operation"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Supermarket"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
  /supermarkets/{supermarket_id}:
    get:
      summary: "Finds supermarket"
      description: "Returns a single supermarket"
      operationId: "app.get_supermarket"
      parameters:
        - name: "supermarket_id"
          in: "path"
          description: "ID of supermarket"
          required: true
          schema:
            type: "integer"
      responses:
        200:
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Supermarket"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
  /supermarkets/{supermarket_id}/articles:
    get:
      summary: "Finds all articles in supermarket"
      description: "Returns an array of articles"
      operationId: "app.get_supermarket_articles"
      parameters:
        - name: "supermarket_id"
          in: "path"
          description: "ID of supermarket"
          required: true
          schema:
            type: "integer"
      responses:
        200:
          description: "Successful operation"
          content:
            json/application:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Article"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
  /supermarkets/{supermarket_id}/sections/{section_id}:
    get:
      summary: "Finds a section in a supermarket"
      description: "Returns a single section"
      operationId: "app.get_supermarket_section"
      parameters:
        - name: "supermarket_id"
          in: "path"
          description: "ID of supermarket"
          required: true
          schema:
            type: "integer"
        - name: "section_id"
          in: "path"
          description: "ID of the section"
          required: true
          schema:
            type: "integer"
      responses:
        200:
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SupermarketSection"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
  /articles/{article_id}:
    get:
      summary: "Finds article"
      description: "Returns a single article"
      operationId: "app.get_article"
      parameters:
        - name: "article_id"
          in: "path"
          description: "ID of article to return"
          required: true
          schema:
            type: "integer"
      responses:
        200:
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Article"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
  /articles:
    get:
      summary: "Lists all articles"
      description: "Returns an array of articles"
      operationId: "app.get_articles"
      responses:
        200:
          description: "Successful operation"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Article"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
  /supermarkets/{supermarket_id}/articles/{article_id}/section:
    get:
      summary: "Find section of article in supermarket"
      description: "Returns supermarket section of article in supermarket"
      operationId: "app.get_supermarket_article_section"
      parameters:
        - name: "supermarket_id"
          in: "path"
          description: "ID of the supermarket"
          required: True
          schema:
            type: "integer"
        - name: "article_id"
          in: "path"
          description: "ID of the article"
          required: True
          schema:
            type: "integer"
      responses:
        200:
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SupermarketSection"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
  /supermarkets/{supermarket_id}/shortest_path:
    get:
      summary: "Finds the shortest path between sections in a supermarket"
      description: "Returns an array of supermarket sections"
      operationId: "app.get_supermarket_shortest_path"
      parameters:
        - name: "supermarket_id"
          in: "path"
          description: "ID of the supermarket"
          required: True
          schema:
            type: "integer"
        - name: "from_section"
          in: "query"
          description: "ID of the section you start from"
          required: True
          schema:
            type: "integer"
        - name: "to_section"
          in: "query"
          description: "ID of the section you go to"
          required: True
          schema:
            type: "integer"
      responses:
        200:
          description: "Successful operation"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SupermarketSection"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
  /supermarkets/{supermarket_id}/shortest_tour:
    get:
      summary: "Finds the shortest tour to visit selected sections in a supermarket"
      description: "Returns an array of supermarket sections"
      operationId: "app.get_supermarket_shortest_tour"
      parameters:
        - name: "supermarket_id"
          in: "path"
          description: "ID of the supermarket"
          required: True
          schema:
            type: "integer"
        - name: "visit_sections"
          in: "query"
          description: "Array of section IDs you want to visit"
          required: True
          schema:
            type: "array"
            items:
              type: "integer"
      responses:
        200:
          description: "Successful operation"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SupermarketSection"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequest"
components:
  schemas:
    BadRequest:
      type: object
      required:
        - error
      properties:
        error:
          type: string
    SupermarketSection:
      type: "object"
      required:
        - id
        - location
        - type
      properties:
        id:
          type: "integer"
          format: "int64"
        location:
          type: object
          required:
            - x
            - y
          properties:
            x:
              type: integer
            y:
              type: integer
        type:
          type: "string"
          enum: ["entrance", "isle", "checkout"]
    Supermarket:
      type: "object"
      required:
        - id
        - name
        - sections
      properties:
        id:
          type: "integer"
          format: "int64"
        name:
          type: "string"
          example: "Lidl Heidelberg"
        sections:
          type: "array"
          items:
            $ref: "#/components/schemas/SupermarketSection"
    Article:
      type: "object"
      required:
        - id
        - name
      properties:
        id:
          type: integer
        name:
          type: string
          example: "Nutella"
        imageUrl:
          type: string
          format: url
